version: '3.4'

services:
  nginx:
    container_name: nginx
    build:
      context: ./services/nginx
      dockerfile: Dockerfile-stage
    restart: always
    ports:
      - 80:80
    depends_on:
      - users
      - client
      - swagger

  client:
    container_name: client
    build:
      context: ./services/client
      dockerfile: Dockerfile-stage
    ports:
      - '3007:80'
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
    depends_on:
      - users
    links:
      - users

  users:
    container_name: users
    build:
      context: ./services/users
      dockerfile: Dockerfile-stage
    expose:
      - 5000
    environment:
      - APP_SETTINGS=project.config.StagingConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_stage
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - users-db
    links:
      - users-db

  users-db:
    container_name: users-db
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  testcafe:
    container_name: testcafe
    image: testcafe/testcafe
    environment:
    - NODE_PATH=/opt/testcafe/node_modules:/opt
    - TEST_URL=http://nginx
    volumes:
    - ./e2e/tests:/tests
    - ./e2e/screenshots:/opt/screenshots
    links:
    - nginx
    security_opt:
    - seccomp:unconfined
    entrypoint: ["/opt/testcafe/docker/testcafe-docker.sh", "chromium", "/tests", "-c", "3", "-S", "-s", "/opt/screenshots"]

  swagger:
    container_name: swagger
    build:
      context: ./services/swagger
      dockerfile: Dockerfile-stage
    ports:
    - '8080'
    environment:
    - URL=swagger.json
    depends_on:
    - users
